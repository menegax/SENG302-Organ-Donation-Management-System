UPDATE_PATIENT_QUERY = INSERT INTO tblPatients \
  (Nhi, FName, MName, LName, Birth, Created, Modified, Death, DeathCity, DeathRegion, \
  DeathStreet,  BirthGender, \
  PrefGender, PrefName, Height, Weight, BloodType, DonatingOrgans) \
  VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) \
  ON DUPLICATE KEY UPDATE \
  FName = VALUES (FName), \
  MName = VALUES (MName), \
  LName = VALUES (LName), \
  Birth = VALUES (Birth), \
  Created = VALUES (Created), \
  Modified = VALUES (Modified), \
  Death = VALUES (Death), \
  DeathCity = VALUES (DeathCity), \
  DeathRegion = VALUES (DeathRegion), \
  DeathStreet = VALUES (DeathStreet), \
  BirthGender = VALUES (BirthGender), \
  PrefGender = VALUES (PrefGender), \
  PrefName = VALUES (PrefName), \
  Height = VALUES (Height), \
  Weight = VALUES (Weight), \
  BloodType = VALUES (BloodType), \
  DonatingOrgans = VALUES (DonatingOrgans)

# ONLY FOR IMPORT
ON_DUPLICATE_UPDATE_PATIENT = ON DUPLICATE KEY UPDATE \
  FName = VALUES (FName), \
  MName = VALUES (MName), \
  LName = VALUES (LName), \
  Birth = VALUES (Birth), \
  Created = VALUES (Created), \
  Modified = VALUES (Modified), \
  Death = VALUES (Death), \
  DeathCity = VALUES (DeathCity), \
  DeathRegion = VALUES (DeathRegion), \
  DeathStreet = VALUES (DeathStreet), \
  BirthGender = VALUES (BirthGender), \
  PrefGender = VALUES (PrefGender), \
  PrefName = VALUES (PrefName), \
  Height = VALUES (Height), \
  Weight = VALUES (Weight), \
  BloodType = VALUES (BloodType), \
  DonatingOrgans = VALUES (DonatingOrgans)

# ONLY FOR IMPORT
BARE_INSERT_PATIENT_BATCH = INSERT INTO tblPatients \
  (Nhi, FName, MName, LName, Birth, Created, Modified, Death, DeathCity, DeathRegion, \
  DeathStreet,  BirthGender, \
  PrefGender, PrefName, Height, Weight, BloodType, DonatingOrgans) \
  VALUES 

# ONLY FOR IMPORT
BARE_INSERT_CONTACT_BATCH = INSERT INTO tblPatientContact \
  (Patient, StreetNumber, StreetName, Suburb, city, Region, Zip, HomePhone, WorkPhone, \
  MobilePhone, Email, ECName, ECRelationship, ECHomePhone, ECWorkPhone, \
  ECMobilePhone, ECEmail) \
  VALUES 

# ONLY FOR IMPORT
PATIENT_INSERT_ANOTHER = ('%s','%s', %s, '%s', '%s', '%s', '%s', %s, %s, %s, %s, %s, %s, '%s', '%s', %s, %s, %s),

# ONLY FOR IMPORT
CONTACT_INSERT_ANOTHER = (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s),

UPDATE_CLINICIAN_QUERY = INSERT INTO tblClinicians \
  (StaffID, FName, MName, LName, Street1, Street2, Suburb, Region, Modified) \
  VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) \
  ON DUPLICATE KEY UPDATE \
  FName = VALUES (FName), \
  MName = VALUES (MName), \
  LName = VALUES (LName), \
  Street1 = VALUES (Street1), \
  Street2 = VALUES (Street2), \
  Suburb = VALUES (Suburb), \
  Region = VALUES (Region), \
  Modified = VALUES (Modified);

# ONLY FOR IMPORT
ON_DUPLICATE_CONTACT_UPDATE = ON DUPLICATE KEY UPDATE \
  StreetNumber = VALUES (StreetNumber), \
  StreetName = VALUES (StreetName), \
  Suburb = VALUES (Suburb), \
  city = VALUES (city), \
  Region = VALUES (Region), \
  Zip = VALUES (Zip), \
  HomePhone = VALUES (HomePhone), \
  WorkPhone = VALUES (WorkPhone), \
  MobilePhone = VALUES (MobilePhone), \
  Email = VALUES (Email), \
  ECName = VALUES (ECName), \
  ECRelationship = VALUES (ECRelationship), \
  ECHomePhone = VALUES (ECHomePhone), \
  ECWorkPhone = VALUES (ECWorkPhone),\
  ECMobilePhone = VALUES (ECMobilePhone), \
  ECEmail = VALUES (ECEmail)

UPDATE_PATIENT_CONTACT_QUERY = INSERT INTO tblPatientContact \
  (Patient, StreetNumber, StreetName, Suburb, city, Region, Zip, HomePhone, WorkPhone, \
  MobilePhone, Email, ECName, ECRelationship, ECHomePhone, ECWorkPhone, \
  ECMobilePhone, ECEmail) \
  VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) \
  ON DUPLICATE KEY UPDATE \
  StreetNumber = VALUES (StreetNumber), \
  StreetName = VALUES (StreetName), \
  city = VALUES (city), \
  Suburb = VALUES (Suburb), \
  Region = VALUES (Region), \
  Zip = VALUES (Zip), \
  HomePhone = VALUES (HomePhone), \
  WorkPhone = VALUES (WorkPhone), \
  MobilePhone = VALUES (MobilePhone), \
  Email = VALUES (Email), \
  ECName = VALUES (ECName), \
  ECRelationship = VALUES (ECRelationship), \
  ECHomePhone = VALUES (ECHomePhone), \
  ECWorkPhone = VALUES (ECWorkPhone),\
  ECMobilePhone = VALUES (ECMobilePhone), \
  ECEmail = VALUES (ECEmail)

UPDATE_PATIENT_LOG_QUERY = INSERT INTO tblPatientLogs \
  (Patient, Time, Level, Message, Action) \
  VALUES (?, ?, ?, ?, ?) \
  ON DUPLICATE KEY UPDATE \
  Time = VALUES (Time)

UPDATE_PATIENT_MEDICATION_QUERY = INSERT INTO tblMedications \
  (Patient, Name, State) \
  VALUES (?, ?, ?) \
  ON DUPLICATE KEY UPDATE \
  Name = VALUES (Name), \
  State = VALUES(State)

SELECT_PATIENT_MEDICATIONS_QUERY = SELECT * FROM tblMedications \
  WHERE Patient = ?

DELETE_PATIENT_MEDICATIONS = DELETE FROM tblMedications \
  WHERE Patient = ?

UPDATE_PATIENT_DISEASES_QUERY = INSERT INTO tblDiseases \
  (Patient, Name, DateDiagnosed, State) \
  VALUES (?, ?, ?, ?) \
  ON DUPLICATE KEY UPDATE \
  State = VALUES (State)

SELECT_PATIENT_DISEASES_QUERY = select * from tblPatients as P JOIN tblDiseases as D ON P.Nhi = D.patient where P.Nhi = ?

DELETE_PATIENT_DISEASES_QUERY = DELETE FROM tblDiseases \
  WHERE Patient = ?

UPDATE_PATIENT_PROCEDURES_QUERY = INSERT INTO tblProcedures \
  (Patient, Summary, Description, ProDate, AffectedOrgans) \
  VALUES (?, ?, ?, ?, ?) \
  ON DUPLICATE KEY UPDATE \
  Description = VALUES (Description), \
  AffectedOrgans = VALUES (AffectedOrgans)

UPDATE_PATIENT_REQUIRED_ORGANS_QUERY = INSERT IGNORE INTO tblRequiredOrgans \
  (Patient, Organ, Date) \
  VALUES (?,?,?)

UPDATE_PATIENT_DONATING_ORGANS_QUERY = INSERT IGNORE INTO tblPatientDonations \
  (donor, recipient, organ) \
  VALUES (?,?,?)

SELECT_PATIENT_PROCEDURES_QUERY = SELECT * FROM tblProcedures \
  WHERE Patient = ?

SELECT_PATIENT_REQUIRED_ORGANS_QUERY = SELECT * FROM tblRequiredOrgans \
  WHERE Patient = ?

SELECT_PATIENT_DONATING_ORGANS_QUERY = SELECT * FROM tblPatientDonations \
  WHERE donor = ?

DELETE_PATIENT_PROCEDURES = DELETE FROM tblProcedures \
  WHERE Patient = ?

DELETE_PATIENT_REQUIRED_ORGAN_QUERY = DELETE FROM tblRequiredOrgans \
  WHERE Patient = ? AND Organ = ?

DELETE_PATIENT_DONATING_ORGAN_QUERY = DELETE FROM tblPatientDonations \
  WHERE donor = ? AND Organ = ?

DELETE_PATIENT_ALL_REQUIRED_ORGANS_QUERY = DELETE FROM tblRequiredOrgans \
  WHERE Patient = ?

UPDATE_ADMIN_QUERY = INSERT INTO tblAdmins \
  (Username, FName, MName, LName, Salt, Password, Modified) \
  VALUES (?, ?, ?, ?, ?, ?, ?) \
  ON DUPLICATE KEY UPDATE \
  FName = VALUES (FName), \
  MName = VALUES (MName), \
  LName = VALUES (LName), \
  Salt = VALUES (Salt), \
  Password = VALUES (Password), \
  Modified = VALUES (Modified)


UPDATE_TRANSPLANT_REQUEST_QUERY = INSERT INTO tblTransplantWaitList \
  VALUES (?, ?, ?, ?, ?) \
  ON DUPLICATE KEY UPDATE \
  Patient = Patient


SELECT_PATIENT_BY_NHI = SELECT * FROM tblPatients WHERE Nhi = (?)


SELECT_PATIENT_CONTACTS = SELECT * FROM tblPatientContact WHERE Patient = (?)

SELECT_PATIENTS_FUZZY_FILTERED = SELECT \
 c.Region, \
levenshtein2(b.Nhi, ?) as NhiMatch, \
least(levenshtein2(b.FName, ?), levenshtein2(b.MName, ?),levenshtein2(b.LName, ?)) as NameMatch, \
levenshtein2(concat(b.FName, ' ', b.MName, ' ', b.LName), ?) as FullNameMatch, \
b.* \
FROM tblPatients b LEFT JOIN tblPatientContact c ON  b.Nhi = c.Patient \
WHERE %FILTER% \
having NhiMatch=0 or nameMatch <= 2 or fullNameMatch <= 2 \
LIMIT 100

SELECT_PATIENTS_SUBSTRING_FILTERED = SELECT \
c.Region, \
exists(select * from tblRequiredOrgans o where o.Patient = b.Nhi) as hasRequired, \
case \
when b.NHI = ? then 0 \
when b.FName Like concat(?, '%') then 1 \
when b.MName Like concat(?, '%') then 2 \
when b.LName Like concat(?, '%') then 3 \
else 4 \
end as matchNum, \
b.* \
FROM tblPatients b LEFT JOIN tblPatientContact c ON  b.Nhi = c.Patient \
where %FILTER% \
having matchNum < 4 \
ORDER BY matchNum ASC


SELECT_PATIENTS_FILTERED = SELECT *, exists(select* from tblRequiredOrgans o where o.Patient = P.Nhi) as hasRequired FROM tblPatients AS P LEFT JOIN tblPatientContact AS C ON P.Nhi = C.Patient WHERE %FILTER% LIMIT 100

SELECT_CLINICIAN_STAFF_ID = SELECT * FROM tblClinicians WHERE StaffID = ?

DELETE_CONTACT_BY_NHI = DELETE FROM tblPatientContact WHERE Patient = ?

DELETE_PATIENT_BY_NHI = DELETE FROM tblPatients WHERE Nhi = ?

INSERT_PATIENT_LOGS = INSERT INTO tblPatientLogs (Patient, Time, Level, Message, Action) VALUES (?, ?, ?, ?, ?)

DELETE_ALL_PATIENT_LOGS = DELETE FROM tblPatientLogs WHERE Patient = ?

SELECT_PATIENT_LOGS = SELECT * FROM tblPatientLogs WHERE Patient = (?)

DELETE_ALL_ADMIN_LOGS = DELETE FROM tblAdminLogs WHERE Admin = ?

INSERT_ADMINISTRATOR_LOGS = INSERT INTO tblAdminLogs (Admin, Time, Level, Message, Action, Target)VALUES (?, ?, ?, ?, ?, ?)

SELECT_ADMINISTRATOR_LOGS = SELECT * FROM tblAdminLogs WHERE Admin = ?

INSERT_CLINICIAN_LOGS = INSERT INTO tblClinicianLogs (Clinician, Time, Level, Message, Action, TargetNhi) VALUES (?, ?, ?, ?, ?, ?)

SELECT_CLINICIAN_LOGS = SELECT * FROM tblClinicianLogs WHERE Clinician = ?

DELETE_ALL_CLINICIAN_LOGS = DELETE FROM tblClinicianLogs WHERE Clinician = ?

SELECT_ALL_TRANSPLANT_WAIT = SELECT * FROM tblTransplantWaitList AS T JOIN tblPatients AS P ON  P.nhi = T.patient

UPDATE_TRANSPLANT_WAIT = INSERT INTO tblTransplantWaitList (Patient, RequestDate, Organ, Region, Address)VALUES (?, ?, ?, ?, ?)

DELETE_ALL_TRANSPLANT_WAIT = DELETE FROM tblTransplantWaitList

SELECT_ADMIN_USERNAME = SELECT * FROM tblAdmins WHERE Username = ?

SELECT_CLINICIANS_FUZZY = SELECT StaffID, FName, MName, LName, Region, \
levenshtein(StaffID, ?) as StaffIDMatch, least(levenshtein(FName, ?), levenshtein(MName, ?), levenshtein(LName, ?)) as NameMatch, \
levenshtein(concat(FName, ' ', MName, ' ', LName), ?) as FullNameMatch \
from tblClinicians \
having StaffIDMatch=0 or nameMatch <= 2 or fullNameMatch <= 2 \
order by least(StaffIDMatch, NameMatch, FullNameMatch) \
LIMIT 100

SELECT_CLINICIANS_SUBSTRING = SELECT \
b.Region, \
case \
when cast(b.StaffID as char(50)) = ? then 0 \
when b.FName Like concat(?, '%') then 1 \
when b.MName Like concat(?, '%') then 2 \
when b.LName Like concat(?, '%') then 3 \
else 4 \
end as matchNum, \
b.* \
FROM tblClinicians b \
having matchNum < 4

SELECT_CLINICIANS = SELECT StaffID, FName, MName, LName, Region \
FROM tblClinicians \
LIMIT 100

SELECT_ADMINISTRATORS_FUZZY = SELECT Username, FName, MName, LName, Salt, Password, Modified, \
levenshtein(username, ?) as UsernameMatch, least(levenshtein(FName, ?), levenshtein(MName, ?), levenshtein(LName, ?)) as NameMatch, \
levenshtein(concat(FName, ' ', MName, ' ', LName), ?) as FullNameMatch \
from tblAdmins \
having UsernameMatch=0 or nameMatch <= 2 or fullNameMatch <= 2 \
order by least(UsernameMatch, NameMatch, FullNameMatch) \
LIMIT 100

SELECT_ADMINISTRATORS_SUBSTRING = SELECT \
case \
when b.Username = ? then 0 \
when b.FName Like concat(?, '%') then 1 \
when b.MName Like concat(?, '%') then 2 \
when b.LName Like concat(?, '%') then 3 \
else 4 \
end as matchNum, \
b.* \
FROM tblAdmins b \
having matchNum < 4

SELECT_ADMINISTRATORS = SELECT Username, FName, MName, LName, Salt, Password, Modified \
FROM tblAdmins \
LIMIT 100

GET_PATIENT_COUNT = SELECT count(*) as count from tblPatients

MAX_STAFFID = select MAX(StaffId) from tblClinicians

DELETE_PATIENTS = DELETE FROM tblPatientLogs where Patient = ?; \
  DELETE FROM tblMedications where Patient = ?; \
  DELETE FROM tblDiseases where Patient = ?; \
  DELETE FROM tblProcedures where Patient = ?; \
  DELETE FROM tblPatientContact where Patient = ?; \
  DELETE FROM tblRequiredOrgans where Patient = ?; \
  DELETE FROM tblPatients where Nhi = ?

DELETE_CLINICIANS = DELETE FROM tblClinicianLogs where Clinician = ?; \
  DELETE FROM tblClinicians where StaffID = ?;

DELETE_ADMINISTRATORS = DELETE FROM tblAdminLogs where Admin = ?; \
  DELETE FROM tblAdmins where Username = ?;

SELECT_NEXT_STAFF_ID = SELECT (MAX(staffID) + 1) as nextID from tblClinicians

CLEAR_DATABASE = delete from tblAdminLogs; \
delete from tblClinicianLogs; \
delete from tblPatientLogs; \
delete from tblDiseases; \
delete from tblMedications; \
delete from tblPatientContact; \
delete from tblProcedures; \
delete from tblRequiredOrgans; \
delete from tblTransplantWaitList; \
delete from tblAdmins; \
delete from tblClinicians; \
delete from tblPatients;

DELETE_ORGAN_REQUEST_BY_NHI = DELETE FROM tblTransplantWaitList WHERE Patient = ?

SELECT_DEAD_PATIENTS = select * from tblPatients as P JOIN tblPatientContact as C ON P.nhi = C.Patient where Death is not null